name: Continuous Integration

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: ${{ matrix.config.name }} | ${{ matrix.config.build_type }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - name: Windows MSVC
          os: windows-latest
          extra_options: -DCMAKE_TOOLCHAIN_FILE=build/vcpkg/scripts/buildsystems/vcpkg.cmake
          build_type: Release

        - name: Windows MSVC
          os: windows-latest
          extra_options: -DCMAKE_TOOLCHAIN_FILE=build/vcpkg/scripts/buildsystems/vcpkg.cmake
          build_type: Debug

        - name: macOS
          os: macos-latest
          deps_cmdline: brew install libvpx webp
          build_type: Release

        - name: macOS
          os: macos-latest
          extra_options: -G Xcode -DDYN_OPENAL=OFF
          deps_cmdline: brew install libvpx webp
          build_type: Debug

        - name: Linux GCC
          os: ubuntu-latest
          extra_options: -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++
          deps_cmdline: sudo apt update && sudo apt install libsdl2-dev libvpx-dev libgtk-3-dev libwebp-dev
          build_type: Release

        - name: Linux Clang
          os: ubuntu-latest
          extra_options: -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DDYN_OPENAL=OFF
          deps_cmdline: sudo apt update && sudo apt install clang libsdl2-dev libvpx-dev libopenal-dev libwebp-dev
          build_type: Debug

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install Dependencies
      shell: bash
      run: |
        if [[ -n "${{ matrix.config.deps_cmdline }}" ]]; then
          eval ${{ matrix.config.deps_cmdline }}
        fi
        mkdir build
        if [[ "${{ runner.os }}" == 'macOS' || "${{ runner.os }}" == 'Linux' ]]; then
          ZMUSIC_VERSION=$(wget -qO- https://api.github.com/repos/coelckers/ZMusic/releases/latest | grep tag_name | cut -d '"' -f 4)
          ZMUSIC_PACKAGE=zmusic-${ZMUSIC_VERSION}-${{ runner.os }}.tar.xz
          wget -q "https://github.com/coelckers/ZMusic/releases/download/${ZMUSIC_VERSION}/${ZMUSIC_PACKAGE}"
          tar -xf "${ZMUSIC_PACKAGE}" -C build
        fi
    
    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      if: runner.os == 'Windows'
      with:
        vcpkgDirectory: '${{ github.workspace }}/build/vcpkg'
        vcpkgGitCommitId: '2c401863dd54a640aeb26ed736c55489c079323b'

    - name: Configure
      shell: bash
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} -DCMAKE_PREFIX_PATH=`pwd`/build/zmusic -DPK3_QUIET_ZIPDIR=ON ${{ matrix.config.extra_options }} .

    - name: Build
      shell: bash
      run: |
        cmake --build build --config ${{ matrix.config.build_type }} --parallel

    - name: Create Package
      shell: bash
      run: |
        cd build
        mkdir package
        if [[ "${{ runner.os }}" == 'Windows' ]]; then
          cp ${{ matrix.config.build_type }}/gzdoom.exe ${{ matrix.config.build_type }}/*.pk3 package
        elif [[ "${{ runner.os }}" == 'macOS' ]]; then
          cp -r gzdoom.app package
        elif [[ "${{ runner.os }}" == 'Linux' ]]; then
          cp gzdoom *.pk3 package
        fi

    - name: Upload Package
      uses: actions/upload-artifact@v3
      with:
        path: build/package
        name: ${{ matrix.config.name }} ${{ matrix.config.build_type }}

    - name: Run Tests
      shell: bash
      run: |
        cd build
        ctest -C ${{ matrix.config.build_type }} --output-on-failure --timeout 300

    - name: Run Network Tests
      shell: bash
      run: |
        cd build/tests
        ./run_network_tests.sh

    - name: Run Sanitizer Tests
      if: matrix.config.build_type == 'Debug' && (matrix.config.name == 'Linux GCC' || matrix.config.name == 'Linux Clang')
      shell: bash
      run: |
        cd build
        cmake -DENABLE_SANITIZERS=ON ..
        cmake --build . --config Debug
        ctest -C Debug --output-on-failure --timeout 300
